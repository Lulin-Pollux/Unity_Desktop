내장 앱 추가하는 방법.txt (ver 1.0.0)


먼저, 양식 보는법:
	1. [ ]는 채워넣어야 하는 곳이다.
이해가 가지 않는 내용은 프로젝트의 소스코드를 보자. 정확한 예시가 적혀있다.


1. 앱을 표시할 JLabel과 간격을 줄 VerticalStrut을 추가한다. 아래 양식을 참고하자.
	양식↓
	JLabel [라벨 이름] = new JLabel("[앱 이름]");
		[라벨 이름].addMouseListener(new MouseAdapter() {
			public void mouseClicked(MouseEvent e) {
				//더블클릭 처리
				if (e.getClickCount() == 2) {
					[*앱 실행 코드*]
				}
			}
		});
		[라벨 이름].setForeground(Color.WHITE);
		[라벨 이름].setFont(new Font("맑은 고딕", Font.PLAIN, 14));
		[라벨 이름].setAlignmentX(Component.CENTER_ALIGNMENT);
		[라벨 이름].setHorizontalTextPosition(SwingConstants.CENTER);
		[라벨 이름].setIconTextGap(7);
		appList_panel.add([라벨 이름]);
		[라벨 이름].setVerticalTextPosition(SwingConstants.BOTTOM);
		ImageIcon img = new ImageIcon("[아이콘 경로]");
		Image changedimg = img.getImage().getScaledInstance(50, 50, Image.SCALE_SMOOTH);
		[라벨 이름].setIcon(new ImageIcon(changedimg));
		
		Component verticalStrut_[번호] = Box.createVerticalStrut(15);
		appList_panel.add(verticalStrut_[번호]);

2. 1번 양식에서 보다시피 앱 실행 코드를 적어넣어야 한다. UI에 따라 코드가 다르므로 주의한다.
     2-1. GUI 앱
	GUI앱은 desktopPane에 넣을 것이므로 앱의 프레임이 반드시 JInternalFrame 이어야한다!!
	만약, 앱의 프레임이 JFrame이라면 JInternalFrame으로 고치고 JFrame에 적용됬던 속성을 수정한다.

	1번 양식에 들어갈 앱 실행 코드↓
	ㄱ. 앱의 클래스의 객체 생성		//예: Calculator calc = new Calculator();
	ㄴ. desktopPane에 만든 객체를 추가한다.//예: desktopPane.add(calc);
	ㄷ. 만든 객체를 보여준다.		//예: calc.show();

     2-2. CUI 앱
	CUI앱은 운영체제의 cmd에서 실행할 것이다. 그런데 cmd는 공유자원이라 하나의 앱만 써야한다.
	그러므로 상호배제를 구현하기 위해, MainFrame에 멤버변수 1개와 해당 앱의 스레드 클래스를 만든다.
	
	MainFrame에 추가할 멤버변수↓
	ㄱ. 앱 실행여부 저장할 변수	//예: public static boolean [앱 이름]_run = false;
	
	해당 앱의 스레드 클래스 추가↓
	ㄱ. run() 메소드 추가	//예: public void run() { }
	ㄴ. 앱 실행하는 메소드 호출	//예: Shell.shell();
	ㄷ. 앱 종료 표시		//예: MainFrame.[앱 이름]_run = false;
	ㄹ. 콘솔 사용 중지 표시	//예: MainFrame.console_used = false;

	1번 양식에 들어갈 앱 실행 코드↓
	ㄱ. 오류발생 경고창을 표시할 코드 적기
	    ㄱ-1 양식
		if ([앱 이름]_run == true) {
			error_message = "이미 " + lbl[앱 이름].getText() + "이(가) 실행되고 있습니다.";
			JOptionPane.showMessageDialog(null, error_message, "오류", JOptionPane.ERROR_MESSAGE);
		}
		else if (console_used == true) {
			error_message = "다른 프로그램에서 콘솔을 점유 중입니다.";
			JOptionPane.showMessageDialog(null, error_message, "오류", JOptionPane.ERROR_MESSAGE);
		}
	ㄴ. 앱 실행 코드 적기
	    ㄴ-1 양식
		if ([앱 이름]_run == false && console_used == false) {
			[앱 스레드 클래스] [객체] = new [앱 스레드 클래스]();	//앱 스레드 생성
			[객체].start();		//플레이어 시작
			console_used = true;	//콘솔 점유 중 표시
			[앱 이름]_run = true;	//앱 실행 중 표시
		}